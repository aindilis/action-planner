;; (NOTE  WHAT THE ARROW IS POINTING TO IS THE UPPER DERAILLEUR PULLEY WHEEL)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; [3]>

		(and (kbs2_kif_quote_2DRCB-_27 ?x1) (kbs2_kif_quote_3E_27 ?x1))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [4]>

;; (IF THE COGS ARE TOO FAR FROM THE CASSETTE COMMA LOOSEN THE ALIGNMENT SCREW UNTIL THEY TOUCH COMMA THEN TIGHTEN IT UNTIL THEY JUST CLEAR A
 FEW MILLIMETERS)

	;; COGS CAN BE FROM A CASSETTE.

		(and (cog_27 ?x1) (be_27 ?e1 ?x1 ?x2) (FROM_27 ?x2) (A_27 ?x2) (CASSETTE_27 ?x2))

	;; A SCREW CAN BE ALIGNMENT.

		(and (SCREW_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ALIGNMENT_27 ?x2))

	;; INDIVIDUAL -S MAY TOUCH.

		(and (INDIVIDUAL_27 ?x1) (kbs2_kif_quote_2DS_27 ?x1) (MAY_27 ?x1) (TOUCH_27 ?x1))

	;; INDIVIDUAL -S MAY CLEAR MILLIMETERS.

		(and (INDIVIDUAL_27 ?x1) (kbs2_kif_quote_2DS_27 ?x1) (MAY_27 ?x1) (CLEAR_27 ?x1) (MILLIMETERS_27 ?x1))

;; (FEEL FOR TENSION IN THE LOWER CABLE)

	;; A FEEL[PERSON??] CAN BE FOR TENSION.

		(and (FEEL_27 ?x1) (kbs2_kif_quote_5B_27 ?x1) (PERSON_27 ?x1))

		(and (be_27 ?e1) (for_27 ?x1) (TENSION_27 ?x1))

;; (IF THERE IS TENSION COMMA LOOSEN THE TENSION BY TURNING THE CABLE ADJUSTER -LRB- INDICATED BY THE RED ARROW -RRB- CLOCKWISE UNTIL THERE
 IS NONE)

	;; A CABLE ADJUSTER MAY CLOCKWISE.

		(and (CABLE_27 ?x1) (ADJUSTER_27 ?x1) (MAY_27 ?x1) (CLOCKWISE_27 ?x1))

	;; AN ARROW CAN BE RED.

		(and (ARROW_27 ?x1) (be_27 ?e1 ?x1) (red_27 ?x1))

;; (THIS IS IMPORTANT IN PREPARING FOR THE NEXT STEP)

	;; 

	;; ((:I (:Q THE THING-REFERRED-TO.N) IMPORTANT.A (:P IN.P (:F KA NIL))))

		(and (I_27 ?x2) (Q_27 ?x1) (THE_27 ?x1) (THING-REFERRED-TO_2EN_27 ?x1) (IMPORTANT_2EA_27 ?x2) (P_27 ?x3) (IN_2EP_27 ?x3) (F_27 ?x4) (KA_27 ?x4) (NIL_27 ?x4))

	;; ______________________________________________________________________

	;; Break 1 [4]>

		(and (Break_27 ?x1) (kbs2_kif_quote_2DLCB-_27 ?e1 ?x1 ?x2) (kbs2_kif_quote_2DRCB-_27 ?x2) (kbs2_kif_quote_3E_27 ?x2))

;; (SHIFT TO THE HIGHEST GEAR AND OBSERVE FROM BEHIND HOW THE CHAIN RIDES ON THE SMALLEST COG)

	;; A CHAIN MAY RIDE ON A COG.

		(and (CHAIN_27 ?x1) (MAY_27 ?x1) (RIDE_27 ?x1) (ON_27 ?x1) (A_27 ?x1) (COG_27 ?x1))

	;; A COG CAN BE SMALLEST.

		(and (COG_27 ?x1) (be_27 ?e1 ?x1 ?x2) (SMALLEST_27 ?x2))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort main loop
Break 2 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [6]>

;; (TO MAKE SURE YOU ARE ADJUSTING THE CORRECT SCREW COMMA CAREFULLY WATCH THE DERAILLEUR AS YOU TURN THE SCREW COMMA AS THE DERAILLEUR
 SHOULD MOVE WITH JUST A FRACTION OF A TURN OF THE CORRECT LIMITING SCREW)

	;; A PERSON MAY ADJUST A SCREW.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (ADJUST_27 ?x1) (A_27 ?x1) (SCREW_27 ?x1))

	;; A PERSON MAY TURN A SCREW.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (TURN_27 ?x1) (A_27 ?x1) (SCREW_27 ?x1))

	;; A DERAILLEUR MAY MOVE WITH A FRACTION OF A TURN OF A SCREW.

		(and (DERAILLEUR_27 ?x1) (MAY_27 ?x1) (MOVE_27 ?x1) (WITH_27 ?x1) (A_27 ?x1) (fraction_27 ?x1) (of_27 ?x1 ?x2) (A_27 ?x2) (TURN_27 ?x2) (of_27 ?x1 ?x3) (A_27 ?x3) (SCREW_27 ?x3))

	;; A SCREW MAY HAVE A TURN.

		(and (SCREW_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (TURN_27 ?x1))

	;; A SCREW CAN BE CORRECT.

		(and (SCREW_27 ?x1) (be_27 ?e1 ?x1 ?x2) (CORRECT_27 ?x2))

	;; A SCREW CAN BE LIMITING.

		(and (SCREW_27 ?x1) (be_27 ?e1 ?x1 ?x2) (LIMITING_27 ?x2))

;; (THEN READJUST THE CABLE TENSION UNTIL SHIFTING IS SMOOTH AGAIN)

	;; SHIFTING CAN BE SMOOTH.

		(and (shifting_27 ?x1) (be_27 ?e1 ?x1 ?x2) (SMOOTH_27 ?x2))

;; (SHIFT TO THE LOWEST GEAR TO MAKE SURE THAT THE CHAIN DOES NOT FALL OFF OF THE CASSETTE)

	;; A GEAR CAN BE LOWEST.

		(and (GEAR_27 ?x1) (be_27 ?e1 ?x1 ?x2) (LOWEST_27 ?x2))

	;; A CHAIN MAY DO.

		(and (CHAIN_27 ?x1) (MAY_27 ?x1) (DO_27 ?x1))

;; (AS IN THE PREVIOUS STEP COMMA WATCH HOW THE CHAIN RIDES ON THE COG -LRB- THIS TIME YOU RE FOCUSING ON THE LARGEST COG -RRB-)

	;; A CHAIN MAY RIDE ON A COG.

		(and (CHAIN_27 ?x1) (MAY_27 ?x1) (RIDE_27 ?x1) (ON_27 ?x1) (A_27 ?x1) (COG_27 ?x1))

	;; A COG CAN BE LARGEST.

		(and (COG_27 ?x1) (be_27 ?e1 ?x1 ?x2) (LARGEST_27 ?x2))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort main loop
Break 4 [7]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort main loop
Break 5 [8]>

;; (TEST YOUR ADJUSTMENTS BY SHIFTING THROUGH ALL THE GEARS AGAIN)

	;; A PERSON MAY HAVE ADJUSTMENTS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (ADJUSTMENTS_27 ?x1))

;; (ATTEMPT TO SHIFT THROUGH ALL OF THE GEARS IN BOTH DIRECTIONS SO YOU CAN DIAGNOSE WHETHER IT IS SHIFTING PROPERLY)

	;; GEARS MAY HAVE A THING.

		(and (GEARS_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (thing_27 ?x1))

	;; GEARS CAN BE IN SOME_NUMBER_OF DIRECTIONS.

		(and (gear_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (SOME_5FNUMBER_5FOF_27 ?x2) (DIRECTIONS_27 ?x2))

	;; A PERSON MAY DIAGNOSE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DIAGNOSE_27 ?x1))

	;; A THING-REFERRED-TO MAY SHIFT.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (SHIFT_27 ?x1))

;; (ATTEMPT TO SHIFT THROUGH ALL OF THE GEARS IN BOTH DIRECTIONS SO YOU CAN DIAGNOSE WHETHER IT IS SHIFTING PROPERLY)

	;; GEARS MAY HAVE A THING.

		(and (GEARS_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (thing_27 ?x1))

	;; GEARS CAN BE IN SOME_NUMBER_OF DIRECTIONS.

		(and (gear_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (SOME_5FNUMBER_5FOF_27 ?x2) (DIRECTIONS_27 ?x2))

	;; A PERSON MAY DIAGNOSE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DIAGNOSE_27 ?x1))

	;; A THING-REFERRED-TO MAY SHIFT.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (SHIFT_27 ?x1))

;; (ATTEMPT TO SHIFT THROUGH ALL OF THE GEARS IN BOTH DIRECTIONS SO YOU CAN DIAGNOSE WHETHER IT IS SHIFTING PROPERLY)

	;; GEARS MAY HAVE A THING.

		(and (GEARS_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (thing_27 ?x1))

	;; GEARS CAN BE IN SOME_NUMBER_OF DIRECTIONS.

		(and (gear_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (SOME_5FNUMBER_5FOF_27 ?x2) (DIRECTIONS_27 ?x2))

	;; A PERSON MAY DIAGNOSE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DIAGNOSE_27 ?x1))

	;; A THING-REFERRED-TO MAY SHIFT.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (SHIFT_27 ?x1))
