;; (TAKE A GOOD LOOK AT YOUR CONTAINERS WHILE THEY RE SPREAD OUT ON A COUNTER OR TABLE)

	;; A LOOK CAN BE AT CONTAINERS.

		(and (LOOK_27 ?x1) (be_27 ?e1 ?x1) (at_27 ?x1 ?x2) (container_27 ?x2))

	;; A LOOK CAN BE GOOD.

		(and (LOOK_27 ?x1) (be_27 ?e1 ?x1) (good_27 ?x1))

	;; A PERSON MAY HAVE CONTAINERS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (CONTAINERS_27 ?x1))

;; (RECYCLE ANY CONTAINERS YOU CA N T OR DO N T USE)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; [4]>

		(and (kbs2_kif_quote_2DRCB-_27 ?x1) (kbs2_kif_quote_3E_27 ?x1))

;; (DISCARDING IS ALWAYS A GOOD FIRST STEP TOWARD ORGANIZING BECAUSE IT MEANS YOU WILL HAVE FEWER LEFT OVER TO ORGANIZE AND STORE COMMA AND BECAUSE ITEMS YOU CA N T OR DO N T USE ARE N T IN THE WAY OF THE ONES YOU
 DO)

	;; DISCARDING CAN BE A STEP.

		(and (discarding_27 ?x1) (be_27 ?e1 ?x1 ?x2) (A_27 ?x2) (STEP_27 ?x2))

	;; A STEP CAN BE GOOD.

		(and (STEP_27 ?x1) (be_27 ?e1 ?x1) (good_27 ?x1))

	;; A THING-REFERRED-TO MAY MEAN.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (MEAN_27 ?x1))

	;; A PERSON MAY DO.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DO_27 ?x1))

	;; ITEMS CAN BE IN A WAY OF ONES.

		(and (ITEMS_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (way_27 ?x2) (of_27 ?x2 ?x3) (one_27 ?x3))

	;; ONES MAY HAVE A WAY.

		(and (ONES_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (way_27 ?x1))

;; (ONE OF THESE THINGS IS NOT LIKE THE OTHERS)

	;; 

	;; (NIL)

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; [6]>

		(and (kbs2_kif_quote_2DRCB-_27 ?x1) (kbs2_kif_quote_3E_27 ?x1))

;; (SORT THROUGH YOUR SET AND RECYCLE ANY LIDS OR CONTAINERS THAT DO N T HAVE MATES)

	;; A PERSON MAY HAVE A SET.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (SET_27 ?x1))

;; (PUT THEM TOGETHER COMMA IF IT HELPS COMMA SO YOU CAN SEE EXACTLY WHERE SOMETHING COMES UP SHORT)

	;; A THING-REFERRED-TO MAY HELP.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (HELP_27 ?x1))

	;; A PERSON MAY SEE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (SEE_27 ?x1))

	;; SOMETHING MAY COME.

		(and (something_27 ?x1) (MAY_27 ?x1) (COME_27 ?x1))

;; (RECYCLE ANY CONTAINERS THAT ARE BROKEN COMMA SPLIT COMMA STAINED COMMA SMELLY COMMA OR MELTED BEYOND THE POINT OF USABILITY)

	;; SPLIT MAY SMELL.

		(and (SPLIT_27 ?x1) (MAY_27 ?x1) (SMELL_27 ?x1))

;; (RECYCLE ANYTHING YOU DO N T USE)

	;; ANYTHING MAY DO.

		(and (ANYTHING_27 ?x1) (MAY_27 ?x1) (DO_27 ?x1))

	;; AN ANYTHING CAN BE RECYCLE.

		(and (anything_27 ?x1) (be_27 ?e1 ?x1 ?x2) (RECYCLE_27 ?x2))

;; (IF IT S TOO SMALL FOR YOUR REGULAR PORTIONS COMMA TOO BIG FOR THE LUNCH BOX OR THE SHELF IN THE FRIDGE COMMA LET IT GO)

	;; A PERSON MAY HAVE PORTIONS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (PORTIONS_27 ?x1))

	;; PORTIONS CAN BE REGULAR.

		(and (portion_27 ?x1) (be_27 ?e1 ?x1 ?x2) (REGULAR_27 ?x2))

	;; A THING-REFERRED-TO MAY GO.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (GO_27 ?x1))

;; (DECIDE HOW MANY CONTAINERS YOU REALLY NEED COMMA AND HOW MANY CONTAINERS YOU NEED IN ANY GIVEN SIZE)

	;; A PERSON MAY NEED.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (NEED_27 ?x1))

	;; A PERSON MAY NEED IN A SIZE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (NEED_27 ?x1) (in_27 ?x1 ?x2) (A_27 ?x2) (SIZE_27 ?x2))

	;; A SIZE CAN BE GIVEN.

		(and (SIZE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (GIVEN_27 ?x2))

;; (CHANCES ARE COMMA YOUR SUPPLY OF FOOD CONTAINERS NEVER RUNS DOWN TO ZERO)

	;; A SUPPLY OF FOOD CONTAINERS MAY RUN_DOWN TO SOME NUMBER_OR_PORTION.

		(and (supply_27 ?x1) (of_27 ?x1 ?x2) (FOOD_27 ?x2) (CONTAINERS_27 ?x2) (MAY_27 ?x2) (RUN_5FDOWN_27 ?x2) (to_27 ?x1 ?x3) (SOME_27 ?x3) (NUMBER_5FOR_5FPORTION_27 ?x3))

	;; CHANCES MAY BE.

		(and (chance_27 ?x1) (be_27 ?e1 ?x1))

	;; A PERSON MAY HAVE A SUPPLY.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (SUPPLY_27 ?x1))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort main loop
Break 2 [15]>

;; (IF YOU DO REPLACE YOUR CONTAINERS AS PART OF THE ORGANIZING PROCESS COMMA BE SURE TO GET RID OF THE OLD COMMA UNMATCHED ONES)

	;; A PERSON MAY DO.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DO_27 ?x1))

	;; A PERSON MAY HAVE CONTAINERS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (CONTAINERS_27 ?x1))

	;; A PROCESS CAN BE ORGANIZING.

		(and (process_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ORGANIZING_27 ?x2))

	;; ONES CAN BE OLD.

		(and (one_27 ?x1) (be_27 ?e1 ?x1 ?x2) (OLD_27 ?x2))

;; (CHOOSE A SUITABLE DRAWER OR CABINET)

	;; A DRAWER CAN BE SUITABLE.

		(and (DRAWER_27 ?x1) (be_27 ?e1 ?x1 ?x2) (SUITABLE_27 ?x2))

;; (A LARGE DRAWER WORKS WELL COMMA IF YOU HAVE ONE)

	;; A DRAWER MAY WORK.

		(and (DRAWER_27 ?x1) (MAY_27 ?x1) (WORK_27 ?x1))

	;; A DRAWER CAN BE LARGE.

		(and (DRAWER_27 ?x1) (be_27 ?e1 ?x1) (large_27 ?x1))

	;; A PERSON MAY HAVE SOME NUMBER_OR_PORTION.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (SOME_27 ?x1) (NUMBER_5FOR_5FPORTION_27 ?x1))

;; (REGARDLESS OF WHICH AREA YOU CHOOSE COMMA DEDICATE A SPECIFIC AREA AND MAKE SURE THE SPACE IS AMPLE FOR THE CONTENTS)

	;; A SPACE CAN BE AMPLE FOR CONTENTS.

		(and (SPACE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (AMPLE_27 ?x2) (for_27 ?e1 ?x3) (content_27 ?x3))

	;; A PERSON MAY CHOOSE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (CHOOSE_27 ?x1))

;; (NEST AND STACK)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; Break 2 [15]>

		(and (Break_27 ?x1) (kbs2_kif_quote_2DRCB-_27 ?x1) (kbs2_kif_quote_3E_27 ?x1))

;; (PLACE THEM IN ORDER AT LEAST ROUGHLY BY SIZE)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; Break 2 [15]>

		(and (Break_27 ?x1) (kbs2_kif_quote_2DRCB-_27 ?x1) (kbs2_kif_quote_3E_27 ?x1))

;; (FREEZER BAGS -LRB- LIKE ZIPLOC OR GLAD -RRB- ARE ALSO A EASY WAY TO KEEP LIDS TOGETHER AND IN ORDER)

	;; BAGS CAN BE A WAY.

		(and (bag_27 ?x1) (be_27 ?e1 ?x1 ?x2) (way_27 ?x2))

	;; BAGS CAN BE FREEZER.

		(and (bag_27 ?x1) (be_27 ?e1 ?x1 ?x2) (FREEZER_27 ?x2))

	;; A WAY CAN BE EASY.

		(and (WAY_27 ?x1) (be_27 ?e1 ?x1 ?x2) (EASY_27 ?x2))

;; (ANOTHER REALLY EFFECTIVE WAY TO STORE THEM IS IN A RECTANGULAR BASKET SCREWED ON THE BACK OF THE CABINET DOOR)

	;; SOME_NUMBER_OF WAY CAN BE IN A BASKET.

		(and (SOME_5FNUMBER_5FOF_27 ?x1) (WAY_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (A_27 ?x2) (BASKET_27 ?x2))

	;; A WAY CAN BE EFFECTIVE.

		(and (way_27 ?x1) (be_27 ?e1 ?x1 ?x2) (EFFECTIVE_27 ?x2))

	;; A BASKET MAY BE SCREW -ED ON A BACK OF A CABINET DOOR.

		(and (BASKET_27 ?x1) (MAY_27 ?x1) (be_27 ?e1 ?x1 ?x2) (SCREW_27 ?x2) (kbs2_kif_quote_2DED_27 ?x2) (ON_27 ?x2) (A_27 ?x2) (BACK_27 ?x2) (of_27 ?x2 ?x3) (A_27 ?x3) (CABINET_27 ?x3) (DOOR_27 ?x3))

	;; A BASKET CAN BE RECTANGULAR.

		(and (BASKET_27 ?x1) (be_27 ?e1 ?x1 ?x2) (RECTANGULAR_27 ?x2))

	;; A CABINET DOOR MAY HAVE A BACK.

		(and (CABINET_27 ?x1) (DOOR_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (BACK_27 ?x1))

;; (A FULL-TIME JOB)

	;; A JOB CAN BE FULL-TIME.

		(and (JOB_27 ?x1) (be_27 ?e1 ?x1 ?x2) (FULL-TIME_27 ?x2))

;; (GIVE CONTAINERS WITH LONG-TERM JOBS PERMANENT HOMES ELSEWHERE)

	;; JOBS CAN BE LONG-TERM.

		(and (JOBS_27 ?x1) (be_27 ?e1 ?x1 ?x2) (LONG-TERM_27 ?x2))

	;; HOMES CAN BE PERMANENT.

		(and (home_27 ?x1) (be_27 ?e1 ?x1 ?x2) (PERMANENT_27 ?x2))

;; (IF A PARTICULAR CONTAINER IS THE ONE YOU ALWAYS USE TO STORE FLOUR IN THE PANTRY OR CHEESE IN THE FRIDGE COMMA YOU MIGHT NEVER NEED TO STORE IT WITH YOUR OTHER CONTAINERS)

	;; A CONTAINER CAN BE AN ONE.

		(and (container_27 ?x1) (be_27 ?e1 ?x1))

	;; A PANTRY CAN BE IN A FRIDGE.

		(and (pantry_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (A_27 ?x2) (FRIDGE_27 ?x2))

	;; A PERSON MAY HAVE CONTAINERS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (CONTAINERS_27 ?x1))

;; (LET IT HAVE ITS NORMAL PLACE IN THE PANTRY EVEN IF YOU RE OUT OF FLOUR)

	;; A THING-REFERRED-TO MAY HAVE A PLACE.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (PLACE_27 ?x1))

	;; A PLACE CAN BE IN A PANTRY.

		(and (PLACE_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (A_27 ?x2) (PANTRY_27 ?x2))

	;; A THING-REFERRED-TO MAY HAVE A PLACE.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (PLACE_27 ?x1))

	;; A PLACE CAN BE NORMAL.

		(and (PLACE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (NORMAL_27 ?x2))
