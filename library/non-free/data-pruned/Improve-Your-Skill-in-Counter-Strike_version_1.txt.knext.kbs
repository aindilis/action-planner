;; [2]>

;; [2]>

;; [2]>

;; [2]>

;; [2]>

;; [2]>

;; [2]>

;; [2]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [3]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort main loop
Break 2 [4]>

;; (THIS STRATEGY CAN WORK WELL AGAINST SNIPERS COMMA BUT IN AN ENCLOSED SPACE IT IS ALWAYS BEST TO MOVE QUICKLY AND ALWAYS MAKE SURE TO AIM AT HEAD LEVEL UNLESS YOU KNOW THE OPPONENT IS CROUCHED)

	;; A STRATEGY MAY WORK AGAINST SNIPERS.

		(and (STRATEGY_27 ?x1) (MAY_27 ?x1) (WORK_27 ?x1) (AGAINST_27 ?x1) (SNIPERS_27 ?x1))

	;; A THING-REFERRED-TO CAN BE BEST.

		(and (thing-referred-to_27 ?x1) (be_27 ?e1 ?x1 ?x2) (BEST_27 ?x2))

	;; A SPACE CAN BE ENCLOSED.

		(and (SPACE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ENCLOSED_27 ?x2))

	;; A PERSON MAY KNOW.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (KNOW_27 ?x1))

	;; AN OPPONENT CAN BE CROUCHED.

		(and (OPPONENT_27 ?x1) (be_27 ?e1 ?x1 ?x2) (CROUCHED_27 ?x2))

;; (ALWAYS AIM AT HEAD LEVEL UNLESS YOU KNOW THE OPPONENT IS POSITIONED DIFFERENTLY)

	;; ALWAYS MAY AIM AT HEAD LEVEL.

		(and (ALWAYS_27 ?x1) (MAY_27 ?x1) (AIM_27 ?x1) (AT_27 ?x1) (HEAD_27 ?x1) (LEVEL_27 ?x1))

	;; A PERSON MAY KNOW.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (KNOW_27 ?x1))

	;; AN OPPONENT MAY BE POSITION -ED.

		(and (OPPONENT_27 ?x1) (MAY_27 ?x1) (be_27 ?e1 ?x1 ?x2) (POSITION_27 ?x2) (kbs2_kif_quote_2DED_27 ?x2))

;; (AVOID CROUCHING)

	;; A CROUCHING CAN BE AVOID.

		(and (CROUCHING_27 ?x1) (be_27 ?e1 ?x1 ?x2) (AVOID_27 ?x2))

;; (CONTRARY TO POPULAR BELIEF COMMA CROUCHING IS A BAD WAY TO IMPROVE YOUR AIM COMMA AS IT SLOWS YOU FROM MOVING QUICKLY AND DOES ABSOLUTELY NOTHING TO SNIPER FIRE COMMA WHICH IS DEAD ON)

	;; CROUCHING CAN BE A WAY.

		(and (crouching_27 ?x1) (be_27 ?e1 ?x1 ?x2) (way_27 ?x2))

	;; A BELIEF CAN BE POPULAR.

		(and (BELIEF_27 ?x1) (be_27 ?e1 ?x1 ?x2) (POPULAR_27 ?x2))

	;; A WAY CAN BE BAD.

		(and (WAY_27 ?x1) (be_27 ?e1 ?x1 ?x2) (BAD_27 ?x2))

	;; A PERSON MAY HAVE AN AIM.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (AN_27 ?x1) (AIM_27 ?x1))

;; (HOWEVER COMMA IF YOU ARE ABLE TO CROUCH UNDER SOMETHING COMMA SUCH AS A TRAIN COMMA THEN THIS WILL PROVIDE EXTRA COVER)

	;; A THING MAY PROVIDE COVER.

		(and (thing_27 ?x1) (MAY_27 ?x1) (PROVIDE_27 ?x1) (COVER_27 ?x1))

	;; A PERSON CAN BE ABLE TO CROUCH.

		(and (PERSON_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ABLE_27 ?x2) (to_27 ?e1 ?x3) (CROUCH_27 ?x3))

	;; CROUCH CAN BE UNDER SOMETHING.

		(and (CROUCH_27 ?x1) (be_27 ?e1 ?x1) (under_27 ?x1 ?x2) (something_27 ?x2))

	;; A COVER CAN BE EXTRA.

		(and (COVER_27 ?x1) (be_27 ?e1 ?x1 ?x2) (EXTRA_27 ?x2))

;; (IF YOU HAVE THE PERSON INSIDE OF THE 4 LINES THAT MAKE UP YOUR CROSSHAIR COMMA YOU LL ONLY SHOOT WITHIN THOSE 4 LINES)

	;; A PERSON MAY HAVE A PERSON INSIDE OF SOME_NUMBER_OF LINES.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (PERSON_27 ?x1) (INSIDE_27 ?x1) (of_27 ?x1 ?x2) (SOME_5FNUMBER_5FOF_27 ?x2) (LINES_27 ?x2))

	;; A PERSON MAY HAVE A CROSSHAIR.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (CROSSHAIR_27 ?x1))

;; (THINKING ABOUT THAT WHEN YOU ATTACK WILL PROBABLY HELP YOU QUITE A BIT)

	;; A PERSON MAY ATTACK.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (ATTACK_27 ?x1))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [5]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort main loop
Break 4 [6]>

;; (LEARN ABOUT HOW LONG IT TAKES FOR YOU TO GET FROM YOUR SPAWN TO SPECIFIC PLACES)

	;; A THING-REFERRED-TO MAY TAKE.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (TAKE_27 ?x1))

	;; A PERSON MAY HAVE A SPAWN.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (SPAWN_27 ?x1))

;; (FOR EXAMPLE ON DE_DUST2 COMMA AS A TERRORIST COMMA IF YOU KNOW HOW LONG IT TAKES FOR A CT TO GET INTO LOWER B TUNNELS COMMA THEN ALL YOU HAVE TO DO IS LISTEN)

	;; EXAMPLE CAN BE ON DE_DUST2.

		(and (EXAMPLE_27 ?x1) (be_27 ?e1 ?x1) (on_27 ?x1 ?x2) (DE_5FDUST2_27 ?x2))

	;; A THING-REFERRED-TO MAY TAKE FOR A CT.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (take_27 ?e1 ?x1) (for_27 ?e1 ?x2) (A_27 ?x2) (CT_27 ?x2))

;; (IF YOU DO N T HEAR ANYTHING COMMA YOU DO N T HAVE TO PEEK LOWER B AND CAN CONTINUE ON TO THE BOMBSITE)

	;; A PERSON MAY DO.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DO_27 ?x1))

;; (MOST GAMES ARE PLAYED IN A 5ON5 FORMAT ON SELECT BOMB DEFUSE MAPS)

	;; GAMES MAY BE PLAY -ED IN A FORMAT.

		(and (game_27 ?x1) (be_27 ?e1 ?x1 ?x2) (PLAY_27 ?x2) (kbs2_kif_quote_2DED_27 ?x2) (in_27 ?x2 ?x3) (A_27 ?x3) (FORMAT_27 ?x3))

	;; A FORMAT CAN BE ON BOMB DEFUSE MAPS.

		(and (FORMAT_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ON_27 ?x2) (BOMB_27 ?x2) (DEFUSE_27 ?x2) (MAPS_27 ?x2))

	;; A FORMAT CAN BE 5ON5.

		(and (FORMAT_27 ?x1) (be_27 ?e1 ?x1 ?x2) (kbs2_kif_quote_35ON5_27 ?x2))

	;; BOMB DEFUSE MAPS CAN BE SELECT.

		(and (BOMB_27 ?x1) (DEFUSE_27 ?x1) (MAPS_27 ?x1) (be_27 ?e1 ?x1 ?x2) (SELECT_27 ?x2))

;; (THOSE LEAGUES CAN BE FOUND AT WWW.CALEAGUE.COM AND WWW.CEVOLVED.COM RESPECTIVELY)

	;; LEAGUES MAY BE FIND -ED AT WWW.CALEAGUE.COM.

		(and (league_27 ?x1) (be_27 ?e1 ?x1 ?x2) (FIND_27 ?x2) (kbs2_kif_quote_2DED_27 ?x2) (AT_27 ?x2) (WWW_2ECALEAGUE_2ECOM_27 ?x2))

;; (THERE ARE OTHER COMMA LESS COMPETITIVE LEAGUES COMMA BUT MOST SERIOUS PLAYERS DO N T LEND THEM ANY RESPECT)

	;; LEAGUES CAN BE COMPETITIVE.

		(and (league_27 ?x1) (be_27 ?e1 ?x1 ?x2) (COMPETITIVE_27 ?x2))

;; (BE SURE WHEN SNIPING THAT YOU ARE NOT MOVING WHEN YOU FIRE YOUR SHOT)

	;; A PERSON MAY FIRE A SHOT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (FIRE_27 ?x1) (A_27 ?x1) (SHOT_27 ?x1))

	;; A PERSON MAY HAVE A SHOT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (SHOT_27 ?x1))

;; (IF YOU RE MOVING COMMA YOU WILL MISS AND HAVING TO WAIT UNTIL YOU CAN FIRE YOUR NEXT SHOT CAN BE DEADLY)

	;; A PERSON MAY MISS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (MISS_27 ?x1))

	;; A PERSON MAY FIRE A SHOT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (FIRE_27 ?x1) (A_27 ?x1) (SHOT_27 ?x1))

	;; A PERSON MAY HAVE A SHOT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (SHOT_27 ?x1))

;; (IN ORDER TO SUCCESSFULLY SNIPE YOU MUST EITHER SHOOT ACCURATELY BEFORE THE OTHER PERSON OR GET THE OTHER PERSON TO MISS GIVING YOU TIME TO AIM AND MAKE THE KILL)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; Break 4 [6]>

		(and (Break_27 ?x1) (kbs2_kif_quote_2DLCB-_27 ?e1 ?x1 ?x2) (kbs2_kif_quote_2DRCB-_27 ?x2) (kbs2_kif_quote_3E_27 ?x2))

;; (TO FIRE ACCURATELY YOU MUST BE STILL OR CROUCHED IN ORDER TO STOP STAFFING QUICKLY BE SURE TO TP THE OPPOSITE DIRECTION OF WHERE YOU ARE GOING)

	;; A DIRECTION CAN BE OPPOSITE.

		(and (direction_27 ?x1) (be_27 ?e1 ?x1 ?x2) (OPPOSITE_27 ?x2))

	;; A PERSON MAY GO.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (GO_27 ?x1))

;; (THIS WILL MAKE YOU STOP SUDDENLY MAKING YOU MORE ACCURATE FASTER)

	;; A PERSON MAY STOP.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (STOP_27 ?x1))

	;; A PERSON CAN BE ACCURATE.

		(and (PERSON_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ACCURATE_27 ?x2))

;; (IN ORDER TO MAKE THE OPPONENT MISS TRY A JUMP CROUCH WHERE YOU JUMP FAR OUT INTO THE FIELD OF VISION OF THE OPPONENT AND THEN AS YOU LAND CROUCH)

	;; A PERSON MAY JUMP INTO A FIELD OF VISION OF AN OPPONENT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (JUMP_27 ?x1) (INTO_27 ?x1) (A_27 ?x1) (FIELD_27 ?x1) (of_27 ?x1 ?x2) (VISION_27 ?x2) (of_27 ?x1 ?x3) (AN_27 ?x3) (OPPONENT_27 ?x3))

	;; AN OPPONENT MAY HAVE VISION.

		(and (OPPONENT_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (VISION_27 ?x1))

	;; A PERSON MAY LAND CROUCH.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (LAND_27 ?x1) (CROUCH_27 ?x1))

;; (IT IS HARD TO HIT YOU WHEN U DO THIS AND THE SECOND YOU LAND YOU WILL BE ABLE TO MAKE A CLEAN SHOT)

	;; U MAY DO A THING.

		(and (U_27 ?x1) (MAY_27 ?x1) (DO_27 ?x1) (A_27 ?x1) (thing_27 ?x1))

	;; A SHOT CAN BE CLEAN.

		(and (SHOT_27 ?x1) (be_27 ?e1 ?x1 ?x2) (CLEAN_27 ?x2))
