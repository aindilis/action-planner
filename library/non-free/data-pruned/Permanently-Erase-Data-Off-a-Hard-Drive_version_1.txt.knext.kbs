;; (SIMPLY BURNING THE FILE ONTO A CD IN THE ORDINARY WAY IS NOT SUFFICIENT)

	;; A CD CAN BE IN A WAY.

		(and (CD_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (way_27 ?x2))

	;; A WAY CAN BE ORDINARY.

		(and (way_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ORDINARY_27 ?x2))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [4]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [4]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [4]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [4]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [4]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [4]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort main loop
Break 2 [5]>

;; (REMOVE THE OLD HARD DRIVE YOU WANT TO DESTROY FROM THE COMPUTER OR EXTERNAL ENCLOSURE -LRB- SUCH AS THE OUTER CASE AROUND A USB HARD
 DRIVE -RRB-)

	;; A DRIVE CAN BE OLD.

		(and (DRIVE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (OLD_27 ?x2))

	;; A DRIVE CAN BE HARD.

		(and (DRIVE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (HARD_27 ?x2))

	;; AN ENCLOSURE CAN BE EXTERNAL.

		(and (ENCLOSURE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (EXTERNAL_27 ?x2))

	;; A CASE CAN BE AROUND A HARD DRIVE.

		(and (case_27 ?x1) (be_27 ?e1 ?x1 ?x2) (AROUND_27 ?x2) (A_27 ?x2) (HARD_27 ?x2) (DRIVE_27 ?x2))

	;; A CASE CAN BE OUTER.

		(and (case_27 ?x1) (be_27 ?e1 ?x1 ?x2) (OUTER_27 ?x2))

	;; A USB[PERSON??] MAY HAVE A HARD DRIVE.

		(and (USB_27 ?x1) (kbs2_kif_quote_5B_27 ?x1) (PERSON_27 ?x1))

		(and (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (HARD_27 ?x1) (DRIVE_27 ?x1))

;; (UNSCREW ALL THE SCREWS HOLDING THE TOP ON)

	;; SCREWS MAY HOLD_ON A TOP.

		(and (SCREWS_27 ?x1) (MAY_27 ?x1) (HOLD_5FON_27 ?x1) (A_27 ?x1) (TOP_27 ?x1))

;; (YOU WILL NEED THE T-9 SIZED WRENCH FOR MOST HARD DRIVES)

	;; A PERSON MAY NEED A T-9 SIZED WRENCH.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (NEED_27 ?x1) (A_27 ?x1) (T-9_27 ?x1) (SIZED_27 ?x1) (WRENCH_27 ?x1))

	;; A T-9 SIZED WRENCH CAN BE FOR DRIVES.

		(and (T-9_27 ?x1) (SIZED_27 ?x1) (WRENCH_27 ?x1) (be_27 ?e1 ?x1) (for_27 ?x1 ?x2) (drive_27 ?x2))

	;; DRIVES CAN BE HARD.

		(and (drive_27 ?x1) (be_27 ?e1 ?x1 ?x2) (HARD_27 ?x2))

;; (SOMETIMES THERE S AN AIR SEAL)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; Break 2 [5]>

		(and (Break_27 ?x1) (kbs2_kif_quote_2DLCB-_27 ?e1 ?x1 ?x2) (kbs2_kif_quote_2DRCB-_27 ?x2) (kbs2_kif_quote_3E_27 ?x2))

;; (YOU WILL NEED TO REMOVE THIS)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; Break 2 [5]>

		(and (Break_27 ?x1) (kbs2_kif_quote_2DLCB-_27 ?e1 ?x1 ?x2) (kbs2_kif_quote_2DRCB-_27 ?x2) (kbs2_kif_quote_3E_27 ?x2))

;; (WINDOWS MICROSOFT SDELETE  SECURE DELETE FILES COMMA DIRECTORIES OR SANITIZE FREE SPACE)

	;; A SECURE[PERSON??] MAY HAVE DELETE FILES.

		(and (SECURE_27 ?x1) (kbs2_kif_quote_5B_27 ?x1) (PERSON_27 ?x1))

		(and (MAY_27 ?x1) (HAVE_27 ?x1) (DELETE_27 ?x1) (FILES_27 ?x1))

	;; A SPACE CAN BE SANITIZE.

		(and (SPACE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (SANITIZE_27 ?x2))

	;; A SPACE CAN BE FREE.

		(and (SPACE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (FREE_27 ?x2))

;; (WIPE FILE  OVERWRITES THE SPECIFIC DISK SPACE OCCUPIED BY THE FILE YOU D LIKE ERASED)

	;; A DISK SPACE MAY OCCUPY BY A FILE.

		(and (DISK_27 ?x1) (SPACE_27 ?x1) (MAY_27 ?x1) (OCCUPY_27 ?x1) (BY_27 ?x1) (A_27 ?x1) (FILE_27 ?x1))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [6]>

;; (ERASER  CAN BE SCHEDULED TO PERFORM REGULAR OVERWRITES OF EMPTY DISC SPACE TO CATCH ORPHAN FILES)

	;; OVERWRITES CAN BE CONSTITUTED_OF_OR_FILLED_WITH DISC SPACE.

		(and (overwrite_27 ?x1) (be_27 ?e1 ?x1 ?x2) (CONSTITUTED_5FOF_5FOR_5FFILLED_5FWITH_27 ?x2) (DISC_27 ?x2) (SPACE_27 ?x2))

	;; OVERWRITES CAN BE REGULAR.

		(and (overwrite_27 ?x1) (be_27 ?e1 ?x1 ?x2) (REGULAR_27 ?x2))

	;; A DISC SPACE CAN BE EMPTY.

		(and (DISC_27 ?x1) (SPACE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (EMPTY_27 ?x2))

	;; FILES CAN BE ORPHAN.

		(and (file_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ORPHAN_27 ?x2))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort main loop
Break 4 [7]>

;; (IT OVERWRITES THE FILES 35 TIMES)

	;; A THING-REFERRED-TO MAY OVERWRITE FILES SOME_NUMBER_OF TIMES.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (OVERWRITE_27 ?x1) (FILES_27 ?x1) (SOME_5FNUMBER_5FOF_27 ?x1) (TIMES_27 ?x1))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort main loop
Break 5 [8]>

;; (SRM  TERMINAL COMMAND THAT DELETES AND OVERWRITES FILES MAKING RECOVERY IMPOSSIBLE)

	;; A COMMAND CAN BE TERMINAL.

		(and (COMMAND_27 ?x1) (be_27 ?e1 ?x1 ?x2) (TERMINAL_27 ?x2))

	;; DELETES MAY FILE.

		(and (delete_27 ?x1) (MAY_27 ?x1) (FILE_27 ?x1))

	;; RECOVERY CAN BE IMPOSSIBLE.

		(and (RECOVERY_27 ?x1) (be_27 ?e1 ?x1 ?x2) (IMPOSSIBLE_27 ?x2))

;; (WIPE PACKAGE FROM UBUNTU UNLEASHED  ADDS SECURE MULTI-PASS FILE DELETION COMMA LIKE DELETEONCLICK DOES IN WINDOWS)

	;; A WIPE_PACKAGE[PERSON??] CAN BE FROM A UBUNTU_UNLEASHED[PERSON??].

		(and (WIPE_5FPACKAGE_27 ?x1) (kbs2_kif_quote_5B_27 ?x1) (PERSON_27 ?x1))

		(and (be_27 ?e1 ?x1) (FROM_27 ?x1) (A_27 ?x1) (UBUNTU_5FUNLEASHED_27 ?x1) (PERSON_27 ?x2))

	;; MULTI-PASS MAY FILE DELETION.

		(and (MULTI-PASS_27 ?x1) (MAY_27 ?x1) (FILE_27 ?x1) (DELETION_27 ?x1))

	;; MULTI-PASS CAN BE SECURE.

		(and (MULTI-PASS_27 ?x1) (be_27 ?e1 ?x1 ?x2) (SECURE_27 ?x2))

	;; A DELETEONCLICK[PERSON??] MAY DO IN A WINDOWS[PERSON??].

		(and (DELETEONCLICK_27 ?x1) (kbs2_kif_quote_5B_27 ?x1) (PERSON_27 ?x1))

		(and (do_27 ?e1) (in_27 ?e1 ?x1) (A_27 ?x1) (WINDOWS_27 ?x1) (PERSON_27 ?x1))
