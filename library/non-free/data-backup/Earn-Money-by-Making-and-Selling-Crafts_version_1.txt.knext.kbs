;; (OR YOU MIGHT DEVELOP A UNIQUE DESIGN COMMA COLOR OR FEATURE)

	;; A PERSON MAY DEVELOP A DESIGN.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DEVELOP_27 ?x1) (A_27 ?x1) (DESIGN_27 ?x1))

;; (MAKE IT STAND OUT ABOVE THE OTHER CRAFT ITEMS IT WILL BE COMPARED WITH)

	;; A THING-REFERRED-TO MAY STAND_OUT ABOVE CRAFT ITEMS.

		(and (THING-REFERRED-TO_27 ?x1) (MAY_27 ?x1) (STAND_5FOUT_27 ?x1) (ABOVE_27 ?x1) (CRAFT_27 ?x1) (ITEMS_27 ?x1))

;; (CREATE A MARKETING PLAN)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; [5]>

		(and (kbs2_kif_quote_2DRCB-_27 ?x1) (kbs2_kif_quote_3E_27 ?x1))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort main loop
Break 1 [6]>

;; (YOU WILL NEED TO MAKE ENOUGH CRAFT ITEMS TO START THE BUSINESS SUCCESSFULLY)

	;; CRAFT ITEMS CAN BE ENOUGH.

		(and (CRAFT_27 ?x1) (ITEMS_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ENOUGH_27 ?x2))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort main loop
Break 2 [7]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort main loop
Break 3 [8]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: an object cannot start with #\)
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort main loop
Break 4 [9]>

;; (THIS WILL LESSEN YOUR PROFITS BUT SPARE YOUR TIME)

	;; A THING MAY LESSEN PROFITS.

		(and (thing_27 ?x1) (MAY_27 ?x1) (LESSEN_27 ?x1) (PROFITS_27 ?x1))

	;; A PERSON MAY HAVE PROFITS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (PROFITS_27 ?x1))

	;; A PERSON MAY HAVE A TIME.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (time_27 ?x1))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort main loop
Break 5 [10]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort main loop
Break 6 [11]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort main loop
Break 7 [12]>

;; (IF SO COMMA CONSIDER HOW YOU WILL MANAGE CARRYING YOUR CRAFT ITEMS ABOUT AND WHETHER YOU HAVE ACCESS TO THE PROPER TRANSPORTATION METHODS)

	;; A PERSON MAY MANAGE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (MANAGE_27 ?x1))

	;; A PERSON MAY HAVE CRAFT ITEMS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (CRAFT_27 ?x1) (ITEMS_27 ?x1))

	;; A PERSON MAY HAVE ACCESS TO TRANSPORTATION METHODS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (ACCESS_27 ?x1) (to_27 ?x1 ?x2) (TRANSPORTATION_27 ?x2) (METHODS_27 ?x2))

	;; TRANSPORTATION METHODS CAN BE PROPER.

		(and (transportation_27 ?x1) (method_27 ?x1) (be_27 ?e1 ?x1 ?x2) (PROPER_27 ?x2))

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort main loop
Break 8 [13]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort main loop
Break 8 [13]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort main loop
Break 8 [13]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort main loop
Break 8 [13]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort debug loop
ABORT          :R9      Abort main loop
Break 9 [14]>

;; *** - READ from #<INPUT CONCATENATED-STREAM #<IO TERMINAL-STREAM>>: token "." not allowed here
The following restarts are available:
ABORT          :R1      Abort debug loop
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort debug loop
ABORT          :R9      Abort debug loop
ABORT          :R10     Abort main loop
Break 10 [15]>

;; (HOW OFTEN YOU DECIDE TO SELL THEM WILL BE AN IMPORTANT CONSIDERATION IN WORKING OUT HOW MUCH STOCK YOU NEED TO HAVE ALWAYS AVAILABLE AND HOW SERIOUSLY YOU WILL TREAT YOUR CRAFT MAKING AS A SOURCE OF PERSONAL
 INCOME)

	;; A CONSIDERATION CAN BE IMPORTANT.

		(and (consideration_27 ?x1) (be_27 ?e1 ?x1 ?x2) (IMPORTANT_27 ?x2))

	;; A PERSON MAY TREAT A CRAFT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (TREAT_27 ?x1) (A_27 ?x1) (CRAFT_27 ?x1))

	;; A PERSON MAY HAVE A CRAFT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (CRAFT_27 ?x1))

	;; A SOURCE CAN BE CONSTITUTED_OF_OR_FILLED_WITH INCOME.

		(and (SOURCE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (CONSTITUTED_5FOF_5FOR_5FFILLED_5FWITH_27 ?x2) (INCOME_27 ?x2))

	;; AN INCOME CAN BE PERSONAL.

		(and (INCOME_27 ?x1) (be_27 ?e1 ?x1 ?x2) (PERSONAL_27 ?x2))

;; (IT MAY BE HELPFUL TO WRITE DOWN A PLAN OVER A PERIOD OF TIME COMMA ESPECIALLY IF YOU ARE PLANNING ON GROWING LARGER AS TIME GOES ON)

	;; TIME MAY GO_ON.

		(and (TIME_27 ?x1) (MAY_27 ?x1) (GO_5FON_27 ?x1))

;; (JEWELRY PROMOTE YOUR CRAFT SALES)

	;; JEWELRY MAY PROMOTE CRAFT SALES.

		(and (JEWELRY_27 ?x1) (MAY_27 ?x1) (PROMOTE_27 ?x1) (CRAFT_27 ?x1) (SALES_27 ?x1))

	;; A PERSON MAY HAVE CRAFT SALES.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (CRAFT_27 ?x1) (SALES_27 ?x1))

;; (MAKE POSTERS TO HANG AND CARDS TO HAND OUT IF THIS IS ALLOWED IN THE MARKET)

	;; A THING MAY BE ALLOW -ED IN A MARKET.

		(and (thing_27 ?x1) (be_27 ?e1 ?x1 ?x2) (ALLOW_27 ?x2) (kbs2_kif_quote_2DED_27 ?x2) (in_27 ?x2 ?x3) (A_27 ?x3) (MARKET_27 ?x3))

;; (TELL PEOPLE WHAT YOU ARE DOING AND ASK YOUR FRIENDS AND FAMILY TO LET OTHERS KNOW THAT YOU HAVE CRAFT ITEMS AVAILABLE FOR SALE)

	;; A PERSON MAY DO.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DO_27 ?x1))

	;; A PERSON MAY HAVE FRIENDS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (FRIENDS_27 ?x1))

	;; CRAFT ITEMS CAN BE AVAILABLE FOR SALE.

		(and (CRAFT_27 ?x1) (ITEMS_27 ?x1) (be_27 ?e1 ?x1 ?x2) (AVAILABLE_27 ?x2) (for_27 ?e1 ?x3) (SALE_27 ?x3))

;; (SET REGULAR CRAFT-MAKING SESSIONS)

	;; SESSIONS CAN BE REGULAR.

		(and (session_27 ?x1) (be_27 ?e1 ?x1 ?x2) (REGULAR_27 ?x2))

	;; SESSIONS CAN BE CRAFT-MAKING.

		(and (session_27 ?x1) (be_27 ?e1 ?x1 ?x2) (CRAFT-MAKING_27 ?x2))

;; (IF YOU PLAN TO SELL REGULARLY COMMA YOU WILL ALSO NEED TO KEEP YOUR STOCK UP)

	;; A PERSON MAY HAVE A STOCK.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (stock_27 ?x1))

;; (MAKE A PLAN OF WHEN YOU WILL DEVOTE TIME TO MAKING MORE CRAFT ITEMS TO INCREASE YOUR STOCK)

	;; A PERSON MAY DEVOTE.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (DEVOTE_27 ?x1))

	;; A PERSON MAY HAVE A STOCK.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (stock_27 ?x1))

;; (ALSO USE THIS TIME TO PLAN NEW ITEMS TO EXPAND YOUR BUSINESS COMMA IF THIS IS APPROPRIATE)

	;; A PERSON MAY HAVE A BUSINESS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (BUSINESS_27 ?x1))

	;; A THING CAN BE APPROPRIATE.

		(and (thing_27 ?x1) (be_27 ?e1 ?x1 ?x2) (APPROPRIATE_27 ?x2))

;; (DEVELOP A SALES PITCH)

	;; 

	;; NIL

		( (NIL_27 ?x1))

	;; ______________________________________________________________________

	;; Break 10 [15]>

		(and (Break_27 ?x1) (kbs2_kif_quote_2DLCB-_27 ?e1 ?x1 ?x2) (kbs2_kif_quote_2DRCB-_27 ?x2) (kbs2_kif_quote_3E_27 ?x2))

;; (YOU KNOW YOUR PRODUCT WELL - BE PREPARED TO DESCRIBE IT WELL)

	;; A PERSON MAY KNOW A PRODUCT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (KNOW_27 ?x1) (A_27 ?x1) (PRODUCT_27 ?x1))

	;; A PERSON MAY HAVE A PRODUCT.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (PRODUCT_27 ?x1))

;; (WRITE DOWN WORDS THAT YOU THINK BEST DESCRIBE EACH OF YOUR CRAFT ITEMS SO THAT YOU CAN PRACTICE THESE IN ADVANCE)

	;; A PERSON MAY THINK.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (THINK_27 ?x1))

	;; CRAFT ITEMS MAY HAVE A THING.

		(and (CRAFT_27 ?x1) (ITEMS_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (thing_27 ?x1))

	;; A PERSON MAY HAVE CRAFT ITEMS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (CRAFT_27 ?x1) (ITEMS_27 ?x1))

	;; A PERSON MAY PRACTICE A THING.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (PRACTICE_27 ?x1) (A_27 ?x1) (thing_27 ?x1))

	;; A THING CAN BE IN ADVANCE.

		(and (thing_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (ADVANCE_27 ?x2))

;; (USE A DICTIONARY IF YOU CAN NOT FIND WORDS THAT CREATE A VISUALLY APPEALING IMAGE IN THE BUYER S MIND)

	;; A PERSON MAY FIND WORDS.

		(and (PERSON_27 ?x1) (MAY_27 ?x1) (FIND_27 ?x1) (WORDS_27 ?x1))

	;; AN IMAGE CAN BE IN A MIND.

		(and (IMAGE_27 ?x1) (be_27 ?e1 ?x1) (in_27 ?x1 ?x2) (A_27 ?x2) (MIND_27 ?x2))

	;; AN IMAGE CAN BE APPEALING.

		(and (IMAGE_27 ?x1) (be_27 ?e1 ?x1 ?x2) (APPEALING_27 ?x2))

	;; A BUYER MAY HAVE A MIND.

		(and (BUYER_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (A_27 ?x1) (MIND_27 ?x1))

;; (CHOOSE WORDS RELATING TO COLOR COMMA SHAPE COMMA TEXTURE AND EASE-OF-USE OR ABILITY TO MAKE THE OWNER OF THE ITEM FEEL HAPPY)

	;; WORDS MAY FEEL HAPPY.

		(and (WORDS_27 ?x1) (MAY_27 ?x1) (FEEL_27 ?x1) (HAPPY_27 ?x1))

	;; WORDS MAY RELATE TO COLOR.

		(and (WORDS_27 ?x1) (MAY_27 ?x1) (RELATE_27 ?x1) (to_27 ?x1 ?x2) (COLOR_27 ?x2))

	;; WORDS CAN BE CHOOSE.

		(and (word_27 ?x1) (be_27 ?e1 ?x1 ?x2) (CHOOSE_27 ?x2))

	;; AN ITEM MAY HAVE AN OWNER.

		(and (ITEM_27 ?x1) (MAY_27 ?x1) (HAVE_27 ?x1) (AN_27 ?x1) (OWNER_27 ?x1))
